'use server';
/**
 * @fileOverview Generates a comprehensive tagging guide based on SEO analysis.
 *
 * - generateTaggingGuide - A function that generates the tagging guide.
 * - GenerateTaggingGuideInput - The input type for the generateTaggingGuide function.
 * - GenerateTaggingGuideOutput - The return type for the generateTaggingGuide function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateTaggingGuideInputSchema = z.object({
  seoReport: z.any().describe('The SEO report generated by the SEO Analyzer Agent.'),
  scrapJson: z.any().describe('The original scrap JSON generated by the Scraping Agent.'),
});
export type GenerateTaggingGuideInput = z.infer<typeof GenerateTaggingGuideInputSchema>;

const GenerateTaggingGuideOutputSchema = z.object({
  guide: z.string().describe('The Markdown / structured JSON guide.'),
  readyToExport: z.string().describe('A ready_to_export version suitable for rendering in PDF.'),
});
export type GenerateTaggingGuideOutput = z.infer<typeof GenerateTaggingGuideOutputSchema>;

export async function generateTaggingGuide(input: GenerateTaggingGuideInput): Promise<GenerateTaggingGuideOutput> {
  return generateTaggingGuideFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateTaggingGuidePrompt',
  input: {schema: GenerateTaggingGuideInputSchema},
  output: {schema: GenerateTaggingGuideOutputSchema},
  prompt: `You are an expert in SEO and web analytics. You will generate a comprehensive tagging guide based on the SEO analysis and the original website structure.

SEO Report:
{{seoReport}}

Original Scrap JSON:
{{scrapJson}}

Your guide should include the following sections:
- Overview
- Recommended events
- dataLayer structure
- Suggested GA4 mappings
- Tagging consistency summary

Generate a ready_to_export version suitable for rendering in PDF.

Ensure the guide is well-structured and easy to understand.`,
});

const generateTaggingGuideFlow = ai.defineFlow(
  {
    name: 'generateTaggingGuideFlow',
    inputSchema: GenerateTaggingGuideInputSchema,
    outputSchema: GenerateTaggingGuideOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
